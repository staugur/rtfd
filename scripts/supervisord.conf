[unix_http_server]
; UNIX socket 文件，supervisorctl 会使用
file=/run/supervisor.sock
chmod=0700

[supervisord]
logfile=/var/log/supervisord.log
; 日志文件大小，超出会rotate，默认 50MB，如果设成0，表示不限制大小
logfile_maxbytes=10MB
; 日志文件保留备份数量默认10，设为0表示不备份
logfile_backups=10
loglevel=info
pidfile=/run/supervisord.pid
; 是否在前台启动，默认是false
nodaemon=true

[supervisorctl]
; 通过UNIX socket连接supervisord，路径与unix_http_server部分的file一致
serverurl=unix:///run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface

[program:rtfd]
; 程序启动命令
command=rtfd api
; 在supervisord启动的时候也自动启动
autostart=true
; 启动N秒后没有异常退出，就表示进程正常启动了，默认为1秒
startsecs=3
; 程序退出后自动重启,可选值：[unexpected,true,false]
; 默认为unexpected，表示进程意外杀死后才重启
autorestart=unexpected
; 启动失败自动重试次数，默认是3
startretries=3
; 进程启动优先级，默认999，值小的优先启动
priority=1
; 把stderr重定向到stdout，默认false
redirect_stderr=true
; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录
stdout_logfile=/var/log/rtfd.out
; stdout 日志文件大小，默认50MB
stdout_logfile_maxbytes=10MB
; stdout 日志文件备份数，默认是10
stdout_logfile_backups=10

[program:nginx]
command=nginx -g "daemon off;"
autostart=true
startsecs=3
autorestart=unexpected
startretries=3
priority=2
redirect_stderr=true
stdout_logfile=/var/log/nginx.out
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=10
